# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- macos-vm-image

pool:
    vmImage: 'macOS-latest'

steps:

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Install-Module -Name UnitySetup -AllowPrerelease'

- task: UnityGetProjectVersionTask@1

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Install-UnitySetupInstance -Installers (Find-UnitySetupInstaller -Version ''$(projectVersion)'' -Components Android) -Verbose'


- task: UnityBuildTask@3
  inputs:
    buildTarget: 'Android'
    unityProjectPath: 'unity/ARDemoApp'
    buildScriptType: 'existing'
    outputFileName: 'drop'
    scriptExecuteMethod: 'AzureDevOps.PerformAndroidBuild'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      Copy-Item "android\build.gradle.template" -Destination "android\UnityExport\build.gradle"
- task: FlutterInstall@0
  inputs:
    channel: 'beta'
    version: 'latest'

- task: FlutterBuild@0
  inputs:
    target: 'apk'
    projectDirectory: '.'
    debugMode: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'build/app/outputs/apk/app.apk'
    ArtifactName: 'Release'
    publishLocation: 'Container'
